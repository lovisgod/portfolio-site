//this are variables

$primary-color : #444;
$secondary-color: #eece1a;
$show-home-image: true;
$home-image: url(../img/back.jpeg);
$background-opacity : 0.9;
$profile-image: url(../img/profile.jpg);

//this is a function
@mixin easeOut {
    transition: all 0.7s ease-out;
}

@mixin background {
    @if $show-home-image {
        &#bg-img {
            background: $home-image no-repeat;
            background-attachment: fixed;
            background-size: cover;
           //the after helps to create a pseudo element
           //that was not available originally in html
           //the content is what is created and now its been
           //set to '' empty. this works like dom manipulation in js
            &:after{
                content: '';
                position: absolute;
                top: 0;
                right: 0;
                left: 0;
                bottom: 0;
                z-index: -1;
                // width: 100%;
                //we are going to rap this background in rgba. and it will take in
                //primary color as first parameter and opacity as second value;
                background: rgba($primary-color, $background-opacity);
            }
        }
    }
}
html{
    font-size: 11px;
}

//media query mixin

@mixin smallM {
    @media screen and (max-width:500px){
        //this content helps with polymorphism to put any css values in the mixin anywhere
        @content;
    }
}

@mixin mediumM {
    @media only screen and (max-width:768px){
        //this content helps with polymorphism to put any css values in the mixin anywhere
        @content;
    }
}

@mixin largeM {
    @media only screen and (min-width:769px) and (max-width:1170px){
        //this content helps with polymorphism to put any css values in the mixin anywhere
        @content;
    }
}

@mixin xtraLargeM {
    @media screen and (min-width:1171px){
        //this content helps with polymorphism to put any css values in the mixin anywhere
        @content;
    }
}